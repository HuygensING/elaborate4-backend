package elaborate.editor.model;

import org.assertj.core.api.AbstractAssert;

// Assertions is needed if an assertion for Iterable is generated

/**
 * {@link Views.Minimal} specific assertions - Generated by CustomAssertionGenerator.
 */
public class MinimalAssert extends AbstractAssert<MinimalAssert, Views.Minimal> {

  /**
   * Creates a new </code>{@link MinimalAssert}</code> to make assertions on actual Views.Minimal.
   * @param actual the Views.Minimal we want to make assertions on.
   */
  public MinimalAssert(Views.Minimal actual) {
    super(actual, MinimalAssert.class);
  }

  /**
   * An entry point for MinimalAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one's can write directly : <code>assertThat(myViews.Minimal)</code> and get specific assertion with code completion.
   * @param actual the Views.Minimal we want to make assertions on.
   * @return a new </code>{@link MinimalAssert}</code>
   */
  public static MinimalAssert assertThat(Views.Minimal actual) {
    return new MinimalAssert(actual);
  }

}
