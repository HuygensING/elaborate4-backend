<web-app id="elaborate-backend" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0">
  <display-name>eLaborate back-end</display-name>
  <description>RESTfull back-end for eLaborate</description>
  <servlet>
    <servlet-name>JerseyRESTService</servlet-name>
    <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
    <init-param>
      <!-- ResourceConfig rc = new PackagesResourceConfig("nl.knaw.huygens.jaxrstools.resources", "nl.knaw.huygens.jaxrstools.providers", "elaborate.editor.resources", "elaborate.editor.providers"); -->
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>elaborate.editor.resources;elaborate.editor.providers;nl.knaw.huygens.jaxrstools.resources;nl.knaw.huygens.jaxrstools.providers</param-value>
    </init-param>

    <init-param>
      <!-- rc.getFeatures().put(JSONConfiguration.FEATURE_POJO_MAPPING, Boolean.TRUE); -->
      <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
      <param-value>true</param-value>
    </init-param>

    <init-param>
      <!--  rc.getContainerRequestFilters().add(new GZIPContentEncodingFilter()); -->
      <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
      <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
    </init-param>

    <init-param>
      <!-- rc.getContainerResponseFilters().add(new GZIPContentEncodingFilter()); -->
      <!-- rc.getContainerResponseFilters().add(new CORSFilter()); -->
      <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
      <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter;nl.knaw.huygens.jaxrstools.filters.CORSFilter</param-value>
    </init-param>

    <init-param>
      <!-- rc.getResourceFilterFactories().add(new RolesAllowedResourceFilterFactory()); -->
      <!-- rc.getResourceFilterFactories().add(new ElaborateResourceFilterFactory()); -->
      <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
      <param-value>elaborate.jaxrs.filters.ElaborateResourceFilterFactory</param-value>
    </init-param>
  
    <load-on-startup>1</load-on-startup>
  </servlet>

	<!-- Catch all requests -->
  <servlet-mapping>
    <servlet-name>JerseyRESTService</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

  <listener>
    <listener-class>se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor</listener-class>
  </listener>
</web-app>  